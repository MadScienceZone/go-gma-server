This is a Go implementation of a game server I originally wrote in Python.
It's a personal side project, and the Go implementation was done in spare time
over a week or so, so I'm not saying this is a thoroughly designed and tested
commercial-grade product, but rather it does demonstrate something I created
using Go that is simple enough to look at as an isolated sample, yet still
complex enough to involve multiple coroutines, mutexes, database integration,
network I/O, a very simple authentication mechanism, etc.

In the man directory are manual page entries for the server and relevant 
internal routines which provide well-defined supporting functions used by the
server. (In the original Python implementation, these functions are part of
a library common to several related tools which include the game server and
various game clients that connect to it.)

The protocol implemented by the server for communication with its clients
is documented in the mapper(6) client manual page, toward the end of that
document.

Steve Willoughby
<steve@alchemy.com>
